package javarndv1;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Formatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Wesley
 */
public class mainUI extends javax.swing.JFrame {
    
    //local variables
    private mainController theMainController;
    JLabel image;
    int count = 1;
    String hash;
    byte[] toHash;
    
    /**
     * Creates new form mainUI
     */
    public mainUI(mainController theMainController) throws IOException {
        this.theMainController = theMainController;
        image = new JLabel("", theMainController.requestImage(), JLabel.CENTER);
        this.setTitle("JavaRndV1");
        initComponents();
        updateHashLabel();
        
        minField.setToolTipText("Lowest Possible Value");
        maxField.setToolTipText("Highest Possible Value");
        
        // Button Stuff
        newPictureButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e)
                {
                    try{
                        getNewPicture();
                    }
                    catch (IOException a)
                    {
                        a.printStackTrace();
                    }
                }
        });
        genButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e)
                {
                    try{
                        getNewPicture();
                    }
                    catch (IOException a)
                    {
                        a.printStackTrace();
                    }               
                    
                    int temp = theMainController.generateNewNumber(Integer.parseInt(minField.getText()), Integer.parseInt(maxField.getText()));
                    generatedLabel.setText(temp + "");
                }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = image;
        jLabel2 = new javax.swing.JLabel();
        newPictureButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 350), new java.awt.Dimension(0, 350), new java.awt.Dimension(32767, 350));
        jLabel3 = new javax.swing.JLabel();
        hashLabel = new javax.swing.JLabel();
        rangeLabel = new javax.swing.JLabel();
        minField = new javax.swing.JTextField("1", 10);
        jLabel4 = new javax.swing.JLabel();
        maxField = new javax.swing.JTextField("10", 10);
        genButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        generatedLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("");

        jLabel2.setText("Source of Randomness");

        newPictureButton.setText("Get New Picture");

        jLabel3.setText("Hash of Picture:");

        hashLabel.setText("jLabel4");

        rangeLabel.setText("Range:");

        jLabel4.setText("to");

        genButton.setText("Generate");

        jLabel5.setText("Generated Number:");

        generatedLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(newPictureButton))
                .addGap(118, 118, 118)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(hashLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rangeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(minField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(genButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(generatedLabel)))
                .addContainerGap(335, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(newPictureButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(hashLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rangeLabel)
                            .addComponent(minField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(maxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(genButton)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(generatedLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getNewPicture() throws IOException
    {
        ImageIcon temp = theMainController.requestImage();
        temp.getImage().flush();
        jLabel1.setIcon(temp);  
        updateHashLabel();
    }
    
    private void updateHashLabel()
    {

        try{

        File fi = new File("noise.jpg");
        byte[] fileContent = Files.readAllBytes(fi.toPath());
        toHash = new byte[(fileContent.length / 7) + 1];
        int i = 0;

        for(int c = 0; c < fileContent.length; c+= 7)
        {
            toHash[i] = fileContent[c];
            i++;
        }
        hash = SHAsum(toHash);
             
        hashLabel.setText(hash);
        theMainController.updateHash(hash);

        } 
        catch(Exception e)
        {
            e.printStackTrace();
            //  not a randomly obtained hash
            System.out.println("Error with hashing photo");
            System.out.println("Using default hash: ab127d5f19adc3009dca86927ca2c4717d9a85db");
        }
    }
    
    // methods to hash and work with hashes
    public static String SHAsum(byte[] convertme) throws NoSuchAlgorithmException{
        MessageDigest md = MessageDigest.getInstance("SHA-1"); 
        return byteArray2Hex(md.digest(convertme));
    }
        
    private static String byteArray2Hex(final byte[] hash) {
        Formatter formatter = new Formatter();
        for (byte b : hash) {
            formatter.format("%02x", b);
        }
        return formatter.toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton genButton;
    private javax.swing.JLabel generatedLabel;
    private javax.swing.JLabel hashLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField maxField;
    private javax.swing.JTextField minField;
    private javax.swing.JButton newPictureButton;
    private javax.swing.JLabel rangeLabel;
    // End of variables declaration//GEN-END:variables
}
